{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/travel_app/server/client/src/components/Cities.js\";\nimport React, { Component } from 'react';\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchCityList } from '../store/actions/cityActions';\n\nclass Cities extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        cityFilter: e.target.value\n      });\n    };\n\n    this.filterCities = () => {\n      const {\n        cities,\n        cityFilter\n      } = this.state;\n      return cities.filter(city => {\n        return city.name.toLowerCase().indexOf(cityFilter.toLowerCase()) !== -1 || city.country.toLowerCase().indexOf(cityFilter.toLowerCase()) !== -1;\n      });\n    };\n\n    this.state = {\n      // cities: [],\n      cityFilter: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCityList();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props;\n    if (!loading) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Filter our current city\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filter\",\n      value: this.state.cityFilter,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"city-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.filterCities().map(city => {\n      return React.createElement(\"li\", {\n        className: \"city\",\n        key: city._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, city.name, \" - \", city.country, \" \"), \" \"), React.createElement(\"img\", {\n        src: city.img,\n        alt: \"cityPhoto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Loading cities...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // initialState: state.initialState,\n    cities: state.cities.cities,\n    loading: state.cities.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCityList: () => dispatch(fetchCityList())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","map":{"version":3,"sources":["/Users/laura/Desktop/travel_app/server/client/src/components/Cities.js"],"names":["React","Component","Footer","connect","fetchCityList","Cities","constructor","props","handleChange","e","setState","cityFilter","target","value","filterCities","cities","state","filter","city","name","toLowerCase","indexOf","country","componentDidMount","render","loading","bind","map","_id","img","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Footer from './Footer';\nimport { connect } from 'react-redux'\nimport { fetchCityList } from '../store/actions/cityActions';\n\n\nclass Cities extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // cities: [],\n            cityFilter: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchCityList()\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            cityFilter: e.target.value\n        })\n    }\n\n    // fecthCityList = () => {\n    //     this.setState({ ...this.state, isFetching: true })\n    //     fetch(\"http://localhost:5000/cities/all\")\n    //         .then(response => response.json())\n    //         .then(result => this.setState({ cities: result, isFetching: false }))\n    //         .catch(e => console.log(e))\n    // }\n\n    filterCities = () => {\n        const { cities, cityFilter } = this.state;\n        return cities.filter((city) => {\n            return city.name.toLowerCase().indexOf(cityFilter.toLowerCase()) !== -1 ||\n                city.country.toLowerCase().indexOf(cityFilter.toLowerCase()) !== -1\n        },\n        )\n    }\n\n\n    render() {\n        const { loading } = this.props;\n\n        if (!loading)\n            return (\n                <div className=\"flex-container\">\n\n                    <div className=\"filter\">\n                        <label htmlFor=\"filter\">Filter our current city</label>\n                        <input type=\"text\" id=\"filter\"\n                            value={this.state.cityFilter}\n                            onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"city-list\">\n                        <ul>\n                            {this.filterCities().map((city) => {\n                                return (\n                                    <li className=\"city\" key={city._id}>\n                                        <h2><center>{city.name} - {city.country} </center> </h2>\n                                        <img src={city.img} alt=\"cityPhoto\" />\n                                    </li>\n                                )\n                            }\n                            )}\n                        </ul>\n                    </div>\n                    <Footer />\n                </div>\n            )\n        else\n            return (\n                <div>Loading cities...</div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // initialState: state.initialState,\n        cities: state.cities.cities,\n        loading: state.cities.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCityList: () => dispatch(fetchCityList())\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Cities)"]},"metadata":{},"sourceType":"module"}