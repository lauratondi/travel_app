{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/travel_app/server/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     itineraries: [],\n    //     city: '',\n    //     fetchItineraryList: []\n    // }\n  }\n\n  componentDidMount() {\n    let city = window.location.pathname.split('/')[2];\n    this.props.fetchItineraryList(city);\n  }\n\n  render() {\n    const {\n      itineraries,\n      loading\n    } = this.props;\n    if (!loading) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading itineraries...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    fetchItineraryList: city => dispatch(fetchItineraryList(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/travel_app/server/client/src/components/Itineraries.js"],"names":["React","Component","Footer","connect","fetchItineraryList","Itineraries","constructor","props","componentDidMount","city","window","location","pathname","split","render","itineraries","loading","mapStateToProps","state","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAX;AACA,SAAKN,KAAL,CAAWH,kBAAX,CAA8BK,IAA9B;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA2B,KAAKT,KAAtC;AAEA,QAAI,CAACS,OAAL,EACI,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,KAQI,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ;AAGP;;AA9B+B;;AAiCpC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHH,IAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBA,WAD5B;AAEHC,IAAAA,OAAO,EAAEE,KAAK,CAACH,WAAN,CAAkBC;AAFxB,GAAP;AAIH,CALD;;AAOA,MAAMG,gBAAgB,GAAGC,QAAQ,IAAI;AACjC,SAAO;AACHhB,IAAAA,kBAAkB,EAAGK,IAAD,IAAUW,QAAQ,CAAChB,kBAAkB,CAACK,IAAD,CAAnB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAClBc,eADkB,EAElBE,gBAFkB,CAAP,CAGbd,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     itineraries: [],\n        //     city: '',\n        //     fetchItineraryList: []\n        // }\n    }\n\n    componentDidMount() {\n        let city = window.location.pathname.split('/')[2]\n        this.props.fetchItineraryList(city);\n    }\n\n    render() {\n        const { itineraries, loading } = this.props\n\n        if (!loading)\n            return (\n                <div className='flex-container'>\n\n                    <Footer />\n                </div>\n            )\n        else\n            return (\n                <div>Loading itineraries...</div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        fetchItineraryList: (city) => dispatch(fetchItineraryList(city))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchProps\n)(Itineraries);"]},"metadata":{},"sourceType":"module"}