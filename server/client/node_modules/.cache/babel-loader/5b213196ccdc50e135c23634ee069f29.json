{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/travel_app/server/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     itineraries: [],\n    //     city: '',\n    //     fetchItineraryList: []\n    // }\n  }\n\n  componentDidMount() {\n    let city = window.location.pathname.split('/')[2];\n    this.props.fetchItineraryList(city);\n  }\n\n  render() {\n    const {\n      itineraries,\n      loading\n    } = this.props;\n    if (!loading) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itineraries-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.fetchItineraryList().map(itinerary => {\n      return React.createElement(\"li\", {\n        className: \"itinerary\",\n        key: itinerary._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, itinerary.title));\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Loading itineraries...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    fetchItineraryList: city => dispatch(fetchItineraryList(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/travel_app/server/client/src/components/Itineraries.js"],"names":["React","Component","Footer","connect","fetchItineraryList","Itineraries","constructor","props","componentDidMount","city","window","location","pathname","split","render","itineraries","loading","map","itinerary","_id","title","mapStateToProps","state","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAX;AACA,SAAKN,KAAL,CAAWH,kBAAX,CAA8BK,IAA9B;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA2B,KAAKT,KAAtC;AAEA,QAAI,CAACS,OAAL,EACI,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWH,kBAAX,GAAgCa,GAAhC,CAAqCC,SAAD,IAAe;AAChD,aACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAA0B,QAAA,GAAG,EAAEA,SAAS,CAACC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,SAAS,CAACE,KAAf,CADJ,CADJ;AAKH,KANA,CADL,CADJ,CADJ,EAYI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ,CADJ,KAkBI,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ;AAGP;;AAxC+B;;AA2CpC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,WAAW,EAAEO,KAAK,CAACP,WAAN,CAAkBA,WAD5B;AAEHC,IAAAA,OAAO,EAAEM,KAAK,CAACP,WAAN,CAAkBC;AAFxB,GAAP;AAIH,CALD;;AAOA,MAAMO,gBAAgB,GAAGC,QAAQ,IAAI;AACjC,SAAO;AACHpB,IAAAA,kBAAkB,EAAGK,IAAD,IAAUe,QAAQ,CAACpB,kBAAkB,CAACK,IAAD,CAAnB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAClBkB,eADkB,EAElBE,gBAFkB,CAAP,CAGblB,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     itineraries: [],\n        //     city: '',\n        //     fetchItineraryList: []\n        // }\n    }\n\n    componentDidMount() {\n        let city = window.location.pathname.split('/')[2]\n        this.props.fetchItineraryList(city);\n    }\n\n    render() {\n        const { itineraries, loading } = this.props\n\n        if (!loading)\n            return (\n                <div className='flex-container'>\n                    <div className='itineraries-list'>\n                        <ul>\n                            {this.props.fetchItineraryList().map((itinerary) => {\n                                return (\n                                    <li className='itinerary' key={itinerary._id}>\n                                        <h3>{itinerary.title}</h3>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                    <Footer />\n                </div>\n            )\n        else\n            return (\n                <div>Loading itineraries...</div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        fetchItineraryList: (city) => dispatch(fetchItineraryList(city))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchProps\n)(Itineraries);"]},"metadata":{},"sourceType":"module"}