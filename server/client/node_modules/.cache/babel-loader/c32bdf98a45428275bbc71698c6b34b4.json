{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/travel_app/server/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itineraries: [],\n      city: '',\n      fetchItineraryList: []\n    };\n  } // componentDidMount() {\n  //     let city = window.location.pathname.split('/')[2],\n  //     this.props.fetchItineraryList(city);\n  // }\n\n\n  render() {\n    const {\n      itineraries,\n      loading\n    } = this.props;\n    if (!loading) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"itineraries page\"), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Loading itineraries...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    fetchItineraryList: city => dispatch(fetchItineraryList(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/travel_app/server/client/src/components/Itineraries.js"],"names":["React","Component","Footer","connect","fetchItineraryList","Itineraries","constructor","props","state","itineraries","city","render","loading","mapStateToProps","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTN,MAAAA,kBAAkB,EAAE;AAHX,KAAb;AAKH,GAT+B,CAWhC;AACA;AACA;AACA;;;AAEAO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,WAAF;AAAeG,MAAAA;AAAf,QAA2B,KAAKL,KAAtC;AAEA,QAAI,CAACK,OAAL,EACI,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ,KASI,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ;AAGP;;AA/B+B;;AAkCpC,MAAMC,eAAe,GAAGL,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBA,WAD5B;AAEHG,IAAAA,OAAO,EAAEJ,KAAK,CAACC,WAAN,CAAkBG;AAFxB,GAAP;AAIH,CALD;;AAOA,MAAME,gBAAgB,GAAGC,QAAQ,IAAI;AACjC,SAAO;AACHX,IAAAA,kBAAkB,EAAGM,IAAD,IAAUK,QAAQ,CAACX,kBAAkB,CAACM,IAAD,CAAnB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAeP,OAAO,CAClBU,eADkB,EAElBC,gBAFkB,CAAP,CAGbT,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            itineraries: [],\n            city: '',\n            fetchItineraryList: []\n        }\n    }\n\n    // componentDidMount() {\n    //     let city = window.location.pathname.split('/')[2],\n    //     this.props.fetchItineraryList(city);\n    // }\n\n    render() {\n        const { itineraries, loading } = this.props\n\n        if (!loading)\n            return (\n                <div className='flex-container'>\n                    <h1>itineraries page</h1>\n\n                    <Footer />\n                </div>\n            )\n        else\n            return (\n                <div>Loading itineraries...</div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        fetchItineraryList: (city) => dispatch(fetchItineraryList(city))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchProps\n)(Itineraries);"]},"metadata":{},"sourceType":"module"}